{"version":3,"sources":["Components/NavBar.js","Components/AnimatedRenderer.js","Components/TransportPosition.js","Components/Meter.js","Components/TrackHeader.js","CoolHelpers.js","Components/TrackCanvas.js","Components/TrackDisplay.js","Components/Playhead.js","Components/EndScreen.js","Components/TracksView.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","AnimatedRenderer","props","tick","setState","data","myReq","window","requestAnimationFrame","state","this","cancelAnimationFrame","render","React","Component","numTitles","TransportPosition","className","Tone","Transport","position","split","map","num","index","key","Math","floor","Meter","useState","source","volume","value","setVolume","useEffect","meter","connect","style","width","textAlign","margin","type","min","max","step","onChange","e","target","round","db","getLevel","opacity","transition","TrackHeader","track","instrument","toString","onClick","methods","removeTrack","BBSToBeats","bbs","Time","valueOf","bpm","addBBSTimes","time1","time2","toBarsBeatsSixteenths","compareBBSTimes","trackLength","length","notes","forEach","note","endPosition","utils","duration","canvasRef","useRef","canvas","current","ctx","parseFloat","$","css","height","clearRect","strokeStyle","lineWidth","minPitch","maxPitch","pitch","x","beatPixels","y","beginPath","moveTo","lineTo","stroke","draw","getContext","ceil","ref","TrackDisplay","paddingLeft","projectLength","Playhead","variant","left","trackDisplayPaddingLeft","TracksView","group","tracks","Object","assign","hackNewNotes","i","push","random","loop","loopEnd","setLoopPoints","App","playing","setPlaying","tempo","setTempo","setKey","setBeatPixels","Synth","toMaster","setTracks","start","pause","cancel","schedule","time","triggerAttackRelease","Frequency","toNote","id","placeholder","concat","icon","faPlus","faStepBackward","context","resume","faPause","faPlay","faStepForward","Master","slice","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4d6230a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function NavBar() {\n  return (\n    <div>menu up top</div>\n  );\n}\n","// import React, { useState, useEffect } from 'react';\n//\n// export default function AnimatedContainer(dataInput) {\n//   const [data, setData] = useState(dataInput);\n//   var myReq;\n//\n//   const tick = () => {\n//     setData(dataInput);\n//     myReq = window.requestAnimationFrame(tick);\n//     console.log(data);\n//   }\n//\n//   window.requestAnimationFrame(tick);\n//\n//   return data;\n// }\n//\n\n// above  was the attempt to use hooks\n\n\n\n\n\nimport React from 'react';\nexport default class AnimatedRenderer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data //data MUST be mutable. That is, it cannot be pass by value, must be pass by reference of some sort\n    };\n  }\n\n  myReq;\n  componentDidMount() {\n    window.requestAnimationFrame(this.tick);\n  }\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.myReq);\n  }\n  tick = () => {\n    this.setState({\n      data: this.props.data,\n    });\n    this.myReq = window.requestAnimationFrame(this.tick);\n  }\n  render() {\n    return (\n      <>\n       {this.props.render(this.state.data)}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport Tone from \"tone\";\nimport './TransportPosition.css';\n\nimport AnimatedRenderer from './AnimatedRenderer';\n\nlet numTitles = ['bar', 'beat', 'sixteenth'];\n\nexport default function TransportPosition() {\n  return (\n\n    <AnimatedRenderer render={data => (\n      <>\n        <div className=\"menu-button disabled\">{Tone.Transport.position.split(':').map((num, index) => {\n          return (\n            <span className='num-box' key={index}><span className='num'>{Math.floor(num)}</span><span className='num-title'>{numTitles[index]}</span></span>\n          );\n        })}</div>\n      </>\n    )} />\n    \n\n  );\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport Tone from \"tone\";\nimport './Meter.css';\n\nimport AnimatedRenderer from './AnimatedRenderer';\n\nfunction dbToAmplitude(db) {\n  return 10**(db/40);\n  // return 10**(db/20); is the correct ofrmula\n}\n\nconst width = 100;\n\nexport default function Meter(props) {\n  const [volume, setVolume] = useState(props.source.volume.value);\n  useEffect(() => {\n    props.source.volume.value = volume;\n  });\n\n  var meter = new Tone.Meter();\n  props.source.connect(meter);\n\n  return (\n    <AnimatedRenderer render={data => (\n      <>\n      <div style={{width: width, textAlign:\"left\", position:\"relative\"}} className=\"menu-button disabled\">\n\n        <input className=\"fader\" style={{position:\"absolute\", width: width, margin:0}} type='range' min=\"-50\" max=\"10\" step=\"0.1\" value={volume} onChange={(e) => {setVolume(e.target.value)}}/>\n        <input type='number' value={volume} onChange={(e) => {setVolume(e.target.value)}} style={{width: \"100%\"}}/>\n        <div className=\"meter\" style={{width: (Math.round(100*dbToAmplitude(Math.min(meter.getLevel(), 0))))+\"%\"}}></div>\n\n      </div>\n      <span className=\"clipping\" style={{opacity: meter.getLevel() > 0 ? 1 : 0, transition: meter.getLevel() > 0 ? \"none\" : \"opacity 2s\"}}>!</span>\n      {/*Math.round(meter.getLevel())*/}\n      </>\n    )} />\n  );\n}\n\n// fader-volume combo?\n","import React from 'react';\nimport \"./TrackParts.css\";\nimport Meter from \"./Meter\";\n\nexport default function TrackHeader(props) {\n  return (\n    <div className=\"track-part track-header\">\n      <div>{props.track.instrument.toString()}</div>\n      <Meter source={props.track.instrument}/>\n      <button className=\"delete-track\" onClick={() => {props.methods.removeTrack(props.index)}}>x</button>\n    </div>\n  );\n}\n\n// at some point: maybe trasition to using data (which contains tracks) only, instead of getting an additional track prop?\n","import Tone from \"tone\";\n\nexport function BBSToBeats(bbs) {\n  return Tone.Time(bbs).valueOf() * Tone.Transport.bpm.value / 60;\n}\n\nexport function addBBSTimes(time1, time2) {\n\treturn Tone.Time( Tone.Time(time1).valueOf() + Tone.Time(time2).valueOf() ).toBarsBeatsSixteenths();\n}\n\nexport function compareBBSTimes(time1, time2) {\n  if (Tone.Time(time1).valueOf() > Tone.Time(time2).valueOf()) {\n    return 1;\n  } else if (Tone.Time(time1).valueOf() === Tone.Time(time2).valueOf()) {\n    return 0;\n  } else {\n    return -1;\n  }\n}\n","import React from 'react';\nimport {useRef, useEffect} from 'react';\nimport './TrackParts.css';\nimport $ from 'jquery';\n\nimport * as utils from '../CoolHelpers';\n\nconst scalar = 4;\n// const beatPixels = 200;\n\nfunction draw(ctx, canvas, track, data) {\n  canvas.width = parseFloat($(canvas).css(\"width\")) * scalar;\n  canvas.height = parseFloat($(canvas).css(\"height\")) * scalar;\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.strokeStyle = \"black\";\n  ctx.lineWidth = canvas.height / 16;\n\n  let minPitch = 128;\n\tlet maxPitch = 0;\n\ttrack.notes.forEach((note) => {\n\t\tif (note.pitch < minPitch) {\n\t\t\tminPitch = note.pitch;\n\t\t}\n\t\tif (note.pitch > maxPitch) {\n\t\t\tmaxPitch = note.pitch;\n\t\t}\n\t});\n\n  track.notes.forEach((note) => {\n    let x = utils.BBSToBeats(note.position) * data.beatPixels * scalar;\n    let y = canvas.height - (0.6*((note.pitch - minPitch) / (maxPitch - minPitch))+0.2)  * canvas.height;\n\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + data.beatPixels*utils.BBSToBeats(note.duration) * scalar, y);\n    ctx.stroke();\n  });\n}\n\nfunction trackLength(track) {\n  let length = '0:0:0';\n  track.notes.forEach((note) => {\n    let endPosition = utils.addBBSTimes(note.position, note.duration);\n    if (utils.compareBBSTimes(endPosition, length) > 0) {\n      length = endPosition;\n    }\n  });\n  // console.log(length);\n  return length;\n}\n\nexport default function TrackHeader(props) {\n  const canvasRef = useRef();\n\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    draw(ctx, canvas, props.track, props.data);\n  });\n\n  return (\n    <div className=\"track-canvas-wrapper\" style={{width: props.data.beatPixels * Math.ceil(utils.BBSToBeats(trackLength(props.track)))}}>\n      <canvas className=\"track-canvas\" ref={canvasRef}>Your browser does not support the canvas.</canvas>\n    </div>\n  );\n}\n","import React from 'react';\nimport './TrackParts.css';\nimport TrackCanvas from './TrackCanvas';\n\nimport * as utils from '../CoolHelpers';\n\nexport default function TrackDisplay(props) {\n  return (\n    <div className=\"track-part track-display-wrapper\" style={{paddingLeft: props.paddingLeft}}>\n      <div className=\"track-display\" style={{width: utils.BBSToBeats(props.data.projectLength) * props.data.beatPixels}}>\n        <TrackCanvas track={props.track} data={props.data} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Tone from \"tone\";\nimport './Playhead.css';\nimport * as utils from '../CoolHelpers';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faPlus, faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons';\n\nimport AnimatedRenderer from './AnimatedRenderer';\n\nconst topWidth = 10;\nconst bottomWidth = 1;\n\nexport default function Playhead(props) {\n  return (\n\n    <AnimatedRenderer render={data => (\n      <div className=\"playhead \" style={{width: (props.variant === 'top' ? topWidth : bottomWidth), left: props.data.trackDisplayPaddingLeft + props.data.beatPixels * utils.BBSToBeats(Tone.Transport.position)}}>\n\n      </div>\n    )}/>\n\n\n  );\n}\n","import React from 'react';\n// import Tone from \"tone\";\nimport './EndScreen.css';\nimport * as utils from '../CoolHelpers';\n\nimport AnimatedRenderer from './AnimatedRenderer';\n\nexport default function Playhead(props) {\n  // console.log('i think its' + utils.BBSToBeats(props.data.projectLength))\n  return (\n\n    <AnimatedRenderer render={data => (\n      <div className=\"end-screen\" style={{left: props.data.trackDisplayPaddingLeft + props.data.beatPixels * utils.BBSToBeats(props.data.projectLength)}}>\n\n      </div>\n    )}/>\n\n\n  );\n}\n","import React, {Component} from 'react';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\nimport \"../HiddenScrollbar.css\";\nimport \"./TracksView.css\";\n// import Tone from 'tone';\n\nimport TrackHeader from './TrackHeader';\nimport TrackDisplay from './TrackDisplay';\nimport Playhead from './Playhead';\nimport EndScreen from './EndScreen';\n\n\n\nconst trackDisplayPaddingLeft = 8;\n\nexport default class TracksView extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n\n  render() {\n\n    return(\n      <ScrollSync>\n        <div className=\"master\">\n          <div className=\"column left\">\n            <div className=\"pane top left track-part\">header</div>\n            <ScrollSyncPane group={[\"horizontal\", \"vertical\"]}>\n              <div className=\"pane bottom left hidden-scrollbar\">\n                {this.props.data.tracks.map((track, index) => {\n                  return <TrackHeader key={index} index={index} track={this.props.data.tracks[index]} data={this.props.data} methods={this.props.methods}/>\n                })}\n              </div>\n            </ScrollSyncPane>\n          </div>\n          <div className=\"column right\">\n\n            <ScrollSyncPane group={[\"horizontal\", \"vertical\"]}>\n              <div className=\"pane top right hidden-scrollbar\">\n                <Playhead variant={'top'} data={Object.assign({}, this.props.data, {trackDisplayPaddingLeft: trackDisplayPaddingLeft})}/>\n                <EndScreen data={Object.assign({}, this.props.data, {trackDisplayPaddingLeft: trackDisplayPaddingLeft})}/>\n                <div className=\"track-part\">\n                  headerheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheaderheader\n                </div>\n              </div>\n            </ScrollSyncPane>\n            <ScrollSyncPane group={[\"horizontal\", \"vertical\"]}>\n              <div className=\"pane bottom right\">\n                <Playhead variant={'bottom'} data={Object.assign({}, this.props.data, {trackDisplayPaddingLeft: trackDisplayPaddingLeft})}/>\n                <EndScreen data={Object.assign({}, this.props.data, {trackDisplayPaddingLeft: trackDisplayPaddingLeft})}/>\n\n                {this.props.data.tracks.map((track, index) => {\n                  return <TrackDisplay paddingLeft={trackDisplayPaddingLeft} key={index} index={index} track={this.props.data.tracks[index]} data={this.props.data} methods={this.props.methods}/>;\n                })}\n              </div>\n            </ScrollSyncPane>\n          </div>\n\n\n        </div>\n      </ScrollSync>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport NavBar from './Components/NavBar';\n// import AnimatedRenderer from './Components/AnimatedRenderer';\nimport TransportPosition from './Components/TransportPosition';\nimport Meter from './Components/Meter';\nimport TracksView from './Components/TracksView';\n\nimport * as utils from './CoolHelpers';\n\n//font awesome icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPause, faPlay, faPlus, faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\n\nimport Tone from \"tone\";\n\n\n\n\n\nTone.Transport.setLoopPoints(0, \"1m\");\nTone.Transport.loop = true;\n\n\nfunction hackNewNotes() {\n  let notes = [];\n  for (let i = 0; i < 32; i++) {\n    notes.push({pitch: Math.floor(Math.random() * (80 - 50)) + 40, duration: '8n', position: '0:0:' + 2*i});\n  }\n  return notes\n}\n\n\nfunction projectLength(tracks) {\n  let length = '0:0:0';\n  if (Tone.Transport.loop) {\n    length = Tone.Time(Tone.Transport.loopEnd).toBarsBeatsSixteenths();\n  }\n  tracks.forEach((track) => {\n    track.notes.forEach((note) => {\n      let endPosition = utils.addBBSTimes(note.position, note.duration);\n      if (utils.compareBBSTimes(endPosition, length) > 0) {\n        length = endPosition;\n      }\n    });\n  });\n  // console.log(length);\n  return '0:' + Math.ceil(utils.BBSToBeats(length)) + ':0';\n}\n\n\nfunction App() {\n  const [playing, setPlaying] = useState(false);\n  const [tempo, setTempo] = useState(120);\n  const [key, setKey] = useState(0);\n  const [beatPixels, setBeatPixels] = useState(100);\n  const [tracks, setTracks] = useState([\n    {instrument: new Tone.Synth().toMaster(), notes: [{pitch: 60, duration: '8n', position: '0:0:0'}, {pitch: 62, duration: '8n', position: '0:1:0'}, {pitch: 64, duration: '8n', position: '0:2:0'}]}\n  ]);\n\n\n  useEffect(() => {\n    if (playing) {\n      Tone.Transport.start();\n    } else {\n      Tone.Transport.pause();\n    }\n\n    Tone.Transport.bpm.value = tempo;\n\n\n    updateTransport();\n\n\n  });\n\n  function updateTransport() {\n    Tone.Transport.cancel();\n    tracks.forEach((track) => {\n      track.notes.forEach((note) => {\n        Tone.Transport.schedule(function(time) {\n          track.instrument.triggerAttackRelease(Tone.Frequency(note.pitch, \"midi\").toNote(), note.duration, time);\n        }, note.position);\n      });\n    });\n\n\n  }\n\n  function removeTrack(index) {\n    setTracks(tracks.slice(0, index).concat(tracks.slice(index+1)));\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NavBar />\n        <div className=\"App-menu-bar\">\n          <input id=\"title\" type=\"text\" placeholder=\"Untitled Project\"></input>\n        </div>\n        <div className=\"App-menu-bar\">\n          <button className=\"menu-button\" onClick={() => {\n            // console.log('hi');\n            setTracks(tracks.concat({instrument: new Tone.Synth().toMaster(), notes: hackNewNotes()}));\n            // console.log(tracks.length);\n          }}>\n            <FontAwesomeIcon icon={faPlus} /> new beat\n          </button>\n          <button className=\"menu-button\" onClick={() => {\n            Tone.Transport.pause();\n            Tone.Transport.position = \"0:0:0\";\n            if (playing) {\n              Tone.Transport.start();\n            } else {\n              Tone.Transport.pause();\n            }\n          }}>\n            <FontAwesomeIcon icon={faStepBackward} />\n          </button>\n          <button className=\"menu-button\" onClick={() => {\n\n            if (Tone.context.state !== 'running') {\n              Tone.context.resume();\n            }\n            setPlaying(!playing);\n\n          }}>\n            {playing? <FontAwesomeIcon icon={faPause} /> : <FontAwesomeIcon icon={faPlay} />}\n          </button>\n          <button className=\"menu-button\">\n            <FontAwesomeIcon icon={faStepForward} />\n          </button>\n          <button className=\"menu-button\">\n            <label>Tempo:</label> <input id=\"tempo\" type=\"number\" value={tempo} onChange={(e) => setTempo(e.target.value)}></input>\n          </button>\n          <button className=\"menu-button\">\n            <label>Key:</label> <select id=\"key\" value={key} onChange={(e) => setKey(e.target.value)}>\n              <option>0</option>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n              <option>6</option>\n              <option>7</option>\n              <option>8</option>\n              <option>9</option>\n              <option>10</option>\n              <option>11</option>\n            </select>\n          </button>\n\n\n          <TransportPosition/>\n\n          <Meter source={Tone.Master}/>\n\n          <input type=\"range\" min=\"10\" max=\"400\" step=\"20\" value={beatPixels} onChange={(e) => setBeatPixels(e.target.value)}></input>\n          {beatPixels}\n\n        </div>\n      </header>\n      <TracksView data={{tracks: tracks, beatPixels: beatPixels, projectLength: projectLength(tracks)}} methods={{removeTrack: removeTrack}}/>\n      <footer className=\"App-menu-bar\">fotoer\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}